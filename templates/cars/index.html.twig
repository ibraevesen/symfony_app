{% extends 'base.html.twig' %}

{% block title %}Cars index{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1 class="text-center">Cars index</h1>

        <table class="table table-striped table-hover">
            <thead>
            <tr>
                <th>Id</th>
                <th>Brand</th>
                <th>Model</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            {% for car in cars %}
                {% for model in car.carModels %}
                    <tr>
                        <td>{{ car.id }}</td>
                        <td>{{ car.brand }}</td>
                        <td>{{ model.model }}</td>
                        <td>{{ model.description }}</td>
                        <td class="d-flex gap-2">
                            <!-- Edit button for the model -->
                            <button class="btn btn-warning text-white" data-bs-toggle="modal" data-bs-target="#editCarModal"
                                    data-id="{{ model.id }}"
                                    data-brand="{{ car.brand }}"
                                    data-model="{{ model.model }}"
                                    data-description="{{ model.description }}">
                                Edit
                            </button>

                            <!-- Delete button for the model -->
                            <form method="post" action="{{ path('app_cars_delete', {'id': model.id}) }}" onsubmit="return confirm('Are you sure you want to delete this model?');">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ model.id) }}">
                                <button class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                {% endfor %}
            {% else %}
                <tr>
                    <td colspan="5">no records found</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>

        <div class="text-end">
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addModelModal">
                Add New Model
            </button>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addBrandModal">
                Add New Brand
            </button>
        </div>
    </div>

    <!-- Edit Car Modal -->
    <div class="modal fade" id="editCarModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Car</h5>
                    <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editCarForm">
                        <input type="hidden" id="modelId" value="">
                        <div class="mb-3">
                            <label for="modelBrand" class="form-label">Brand:</label>
                            <input id="modelBrand" name="editBrand" class="form-control" value="" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="carModel" class="form-label">Model:</label>
                            <input type="text" id="carModel" name="model" class="form-control">
                        </div>
                        <div class="mb-3">
                            <label for="carDescription" class="form-label">Description:</label>
                            <input type="text" id="carDescription" name="description" class="form-control">
                        </div>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="addBrandModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Brand</h5>
                    <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addBrandForm">
                        <div class="mb-3">
                            <label for="newBrand" class="form-label">Brand:</label>
                            <input type="text" id="newBrand" name="newBrand" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Brand</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Car Modal -->
    <div class="modal fade" id="addModelModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Model</h5>
                    <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addModelForm">
                        <div class="mb-3">
                            <label for="newModelBrand" class="form-label">Brand:</label>
                            <select id="newModelBrand" name="brand" class="form-control" required>
                                <option value="">Select a brand</option>
                                {% for car in cars %}
                                    <option value="{{ car.id }}">{{ car.brand }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="newModel" class="form-label">Model:</label>
                            <input type="text" id="newModel" name="model" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label for="newModelDescription" class="form-label">Description:</label>
                            <input type="text" id="newModelDescription" name="description" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Car</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Handle Edit Car Modal
        const editCarModal = document.getElementById('editCarModal');
        editCarModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget; // The button that triggered the modal
            const modelId = button.getAttribute('data-id');
            const brand = button.getAttribute('data-brand');
            const model = button.getAttribute('data-model');
            const description = button.getAttribute('data-description');

            // Fill the form fields
            document.getElementById('modelId').value = modelId;
            document.getElementById('modelBrand').value = brand;
            document.getElementById('carModel').value = model;
            document.getElementById('carDescription').value = description;
        });

        document.getElementById('addBrandForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const brand = document.getElementById('newBrand').value;

            fetch('/car/addBrand', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    brand: brand
                }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {

                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        });

        // Handle Add Car Modal form submission
        document.getElementById('addModelForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const brandId = document.getElementById('newModelBrand').value;
            const model = document.getElementById('newModel').value;
            const description = document.getElementById('newModelDescription').value;

            fetch('/car/addModel', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    brand_id: brandId,
                    model: model,
                    description: description
                }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        });

        // Handle Edit Car form submission
        document.getElementById('editCarForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const modelId = document.getElementById('modelId').value;
            const model = document.getElementById('carModel').value;
            const description = document.getElementById('carDescription').value;

            fetch('/car/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: modelId, model: model, description: description }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        // Найти строку и обновить без перезагрузки
                        const row = document.querySelector(`button[data-id="${modelId}"]`).closest('tr');
                        row.querySelector('td:nth-child(3)').textContent = model;  // Model
                        row.querySelector('td:nth-child(4)').textContent = description;  // Description

                        // Обновить data-атрибуты в кнопке "Edit", чтобы при следующем открытии модального окна были новые данные
                        const editButton = row.querySelector('button[data-bs-toggle="modal"]');
                        editButton.setAttribute('data-model', model);
                        editButton.setAttribute('data-description', description);

                        bootstrap.Modal.getInstance(editCarModal).hide();
                    } else {
                        alert('Error updating car: ' + data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        });
    </script>
{% endblock %}
